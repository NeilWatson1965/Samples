<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="NameColumn.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="HintLabel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>